#!/usr/bin/env python3

from dataclasses import dataclass
import json
import os
import subprocess
import time

POLL_INTERVAL = 0.5

@dataclass
class Stat:
    mtime: int
    content: str

def changes(*filenames):
    print(f'watching: {".".join(map(repr, filenames))}')
    stats = {
        filename: Stat(mtime=None, content=None)
        for filename in filenames
    }
    for filename in filenames:
        yield (filename, False)

    while True:
        for filename in filenames:
            s = stats[filename]
            newmtime = os.stat(filename).st_mtime
            if s.mtime != newmtime:
                s.mtime = newmtime
                with open(filename) as cf:
                    newcontent = cf.read()
                if s.content != newcontent:
                    if s.content is not None:
                        yield (filename, True)
                    s.content = newcontent
            else:
                time.sleep(POLL_INTERVAL)

def main():
    p = subprocess.run(
        '/envelope/bin/reconfigure',
        shell=True,
        check=True,
        capture_output=True,
    )
    files = [f for f in p.stdout.split('\n') if f]

    for _ in changes(*files):
        try:
            p = subprocess.run(
                '/envelope/bin/reconfigure',
                shell=True,
                check=True,
            )
        except Exception as e:
            print(f"Error calling reconfigure: {e}")

if __name__ == '__main__':
    main()
