#!/usr/bin/env python3

from dataclasses import dataclass
import json
import os
import subprocess
import sys

CONFIG_FILE = '/work/config.jsonnet'

WIRING_FILE = '/work/wiring.env'
EGRESSES_FILE = '/var/lib/nginx/egresses.conf'

def generateWiringFile(config):
    print('Generate', WIRING_FILE)
    with open(WIRING_FILE, 'w') as w:
        json.dump({
            'ingress': f"127.0.0.1:10000",
            'egresses': {
                key: f"http://localhost:{config['envelope']}/egresses/{key}"
                for key in config['egresses']
            }
        }, w, indent=2)
        print(file=w)

def generateEgressesFile(config):
    print('Generate', EGRESSES_FILE)
    with open(EGRESSES_FILE, 'w') as w:
        for (name, egress) in sorted(config['egresses'].items()):
            print(f"""
                location /egresses/{name} {{
                    rewrite ^/egresses/{name}/(.*)$ /$1 break;
                    proxy_pass {egress.replace('localhost', 'host.docker.internal')};
                }}
            """, file=w)

def main():
    if not sys.argv[1:2]:
        print(CONFIG_FILE)
    else:
        p = subprocess.run(
            'jsonnet /work/config.jsonnet',
            shell=True,
            check=True,
            capture_output=True,
        )
        config = json.loads(p.stdout)

        generateWiringFile(config)
        generateEgressesFile(config)

        print('Reload nginx config')
        subprocess.run('nginx -s reload', shell=True)

if __name__ == '__main__':
    main()
